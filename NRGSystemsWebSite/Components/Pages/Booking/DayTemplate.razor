@using MudBlazor
@using NRGSystemsWebSite.Handlers
@using NRGSystemsWebSite.Models

@inject AppStateService appStateService
@* @implements IDisposable *@

@* @rendermode InteractiveServer *@


<table style="align-content:center">
    @* @if ((@TimeStyle.Count > 20) && (@TakenTime.Count > 20)) *@
    @* @if (TimeCounter == 0) *@
    @if ((@TakenTimesCount > 20) && (@TimeStylesCount > 20))
    { 
        @for(int i = 1; i < 16;i++)
        {
            <tr>
            @for(int j = 1; j < 5; j++)
            {
                <td>
                    <label class="ms-fontsize-24 ms-fontWeight-regular"
                           style=@TimeStyles[TimeCounter]>@TakenTimes[TimeCounter]</label>
                </td>
                TimeCounter++;
            }
            </tr>
        }

        TimeCounter = 1;
    } 
</table>

@code
{
    [Parameter]
    public List<string> TakenTimes { get; set; } = new();
    [Parameter]
    public List<string> TimeStyles { get; set; } = new();
    [Parameter]
    public int TimeCounter { get; set; } = 1;
    [Parameter]
    public int TakenTimesCount { get; set; } = 1;
    [Parameter]
    public int TimeStylesCount { get; set; } = 1;

    // private void OnStateChanged()
    //     => this.InvokeAsync(StateHasChanged);

    // public void Dispose()
    //     => this.appStateService.LoadStateChanged -= this.OnStateChanged;

    protected override async Task OnInitializedAsync()
    {
        // this.appStateService.LoadStateChanged += this.OnStateChanged;
        // UpdateDay(new List<CalendarEvents>());
    }

    // public async Task UpdateDay(List<CalendarEvents> _dayBookings)
    // {
    //     takenTimes = new();
    //     timeStyles = new();
    //     for (int i = 6; i < 21; i++)
    //     {
    //         for (int j = 0; j < 60; j += 15)
    //         {
    //             string ii = j.ToString();
    //             if (j == 0)
    //             {
    //                 ii = "00";
    //             }

    //             if (i < 10)
    //             {
    //                 takenTimes.Add($"0{i}:" + ii);
    //             }
    //             else
    //             {
    //                 takenTimes.Add($"{i}:" + ii);
    //             }
    //             timeStyles.Add("padding:1rem; width:10rem; color:#06e107");
    //         }
    //     }

    //     foreach (var booking in _dayBookings)
    //     {
    //         var b = booking.StartTime.Substring(0, 5);

    //         for(int i = 0; i < takenTimes.Count; i++)
    //         {
    //             if(b == takenTimes[i])
    //             {
    //                 var res = TimeSpan.Parse(booking.Duration);
    //                 var res2 = TimeSpan.Parse(booking.StartTime);
    //                 var res3 = res - res2;
    //                 var res4 = res3.TotalMinutes;
    //                 var res5 = res4 / 15;

    //                 for(int t = 0; t < res5; t++)
    //                 {
    //                     timeStyles[i] = "padding:1rem; width:10rem; color:red";
    //                     i++;
    //                 }
    //             }
    //         }
    //     }
    //     timeCounter = 0;

    //     // this.appStateService.IsLoaded = false;
    //     // // emulate an async loading event
    //     // await Task.Delay(20);
    //     // this.appStateService.IsLoaded = true;
    // }
}


