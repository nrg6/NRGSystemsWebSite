@page "/progress"
@* 
@using Azure.Storage.Blobs
@using Azure.Storage.Blobs.Models
@using NRGsystemsPtWebApiClient.Models

@inject FunctionRestService blobService
 *@
<h3>Progress</h3>

<div class="modal fade" id="reviewModal" tabindex="-1" role="dialog"aria-hidden="true" aria-modal="true">
@*     <div class="modal-dialog modal-lg" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h4 class="modal-title" id="modalTitleLabel"> what do you think </h4>
                <button type="button" class="btn-close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true" &times;> </span>
                </button>
            </div>
            <div class="modal-body">
                <texterea class="form-control" rows="10"
                          placeholder="leave review"
                          @bind="reviewText"/>
                          @if(showUpload)
                          {
                                <InputFile id="hi" OnChange= "@loadFiles" />
                          }
                          @if(uploadSuccessful)
                {
                    <p class="bg-success">Uploaded</p>
                }
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-light" data-dismiss="modal">Cancel</button>
                @* <button type="button" class="btn btn-primary" @onclick="SaveReview">Save</button> 
            </div>
        </div>
    </div> *@
</div>


@code {
    // [Parameter]
    // public Muscle muscle { get; set; }

    // string reviewText = string.Empty;
    // string newBlobName = string.Empty;
    // string loggedInUser = "nrg";
    // bool loadedPicture = false;

    // bool showUpload = true;
    // bool uploadSuccessful = false;


    // private async Task loadFiles(InputFileChangeEventArgs e)
    // {
    //     uploadSuccessful = false;

    //     loadedPicture = true;

    //     var containerClient = blobService.GetBlobContainerClient(loggedInUser);

    //     await containerClient.CreateIfNotExistsAsync(PublicAccessType.Blob);

    //     newBlobName = $"{Guid.NewGuid().ToString()}.jpg";
    //     await containerClient.UploadBlobAsync(newBlobName, e.File.OpenReadStream(maxAllowedSize: 2048000));

    //     loadedPicture = true;

    //     uploadSuccessful = true;

    //     StateHasChanged();

    // }
}
