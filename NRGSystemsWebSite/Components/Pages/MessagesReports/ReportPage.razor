@page "/report"

@using NRGSystemsWebSite.Models
@using NRGSystemsWebSite.Services

@inject FunctionRestService apiClient
@inject NavigationManager NavigaitonManager


<h2>Reports</h2>
@if (allReports is null)
{
    <p><em>Loading ..........</em></p>
}
else
{
    <tr>
        <input type="button" class="io oi-flash" @onclick="@ViewUnreadReports" value="Only View Unread Reports" />
        <input type="button" class="io oi-flash" @onclick="@ViewAllReports" value="View All Reports" />
    </tr>

    <table class="table">
        <thead>
            <tr>
                <th> Id </th>
                <th> Clients Name </th>
                <th> TimeOfSession </th>
                <th> DateIssued </th>
                <th> NameOfExercise </th>
            </tr>
        </thead>

        <tbody>
            @foreach (var report in viewReports)
            {
                <tr>
                    <td> @report.ReportId </td>
                    <td> @report.ClientName </td>
                    <td> @report.TimeOfSession </td>
                    <td> @report.DateIssued </td>
                    <td> @report.NameOfExercise </td>
                    <input type="button" class="io oi-flash" @onclick="()=>RespondTo(report.ReportId)" value="Respond" />
@*                     <td>
                        <a class="nav-link btn btn-primary" href="EditReport/@report.ReportId">
                            <span class="oi oi-pencil" aria-hidden="true"> Respond </span>
                        </a>
                    </td> *@
                </tr>
            }
        </tbody>
    </table>
}


@code {
        List<ProgramReports> allReports = [];
        List<ProgramReports> readReports = [];
        List<ProgramReports> unreadReports = [];
        List<ProgramReports> viewReports = [];
        ProgramReports currentReport = new();
        int reportIndex = 0;
        string reportRead = "";
        int noOfUnreadReports;
        int noOfReadReports;

    protected override async Task OnInitializedAsync()
    {
        allReports = await apiClient.GetAllReports();

        foreach (var rep in allReports)
        {
            var dateSplit = rep.TimeOfSession.Split('-');
            rep.TimeOfSession = dateSplit[0];
            if (rep.Reported > 0)
            {
                readReports.Add(rep);
            }
            else
            {
                unreadReports.Add(rep);
            }
        }
        noOfReadReports = readReports.Count;
        noOfUnreadReports = unreadReports.Count;

        viewReports = unreadReports;

        reportIndex = 0;
        if (allReports.Count > 0)
        {
            currentReport = allReports[reportIndex];
        }
        setButtonText();
    }

    protected async Task ViewUnreadReports()
    {
        viewReports = unreadReports;
        NavigaitonManager.NavigateTo("report");
    }
    protected async Task ViewAllReports()
    {
        viewReports = allReports;
        NavigaitonManager.NavigateTo("report");
    }

    protected async Task RespondTo(int reportId)
    {
        NavigaitonManager.NavigateTo($"reportResponse/{reportId}");   
    }

    protected async Task NextReport()
    {
        reportIndex++;
        if (reportIndex > allReports.Count)
        {
            reportIndex = 0;
        }
        else
        {
            if (allReports.Count > 0)
            {

                await apiClient.EditAReport(allReports[reportIndex - 1]);
                currentReport = allReports[reportIndex];
            }
        }
        setButtonText();
    }
    protected void PreviousReport()
    {
        reportIndex--;
        if (reportIndex < 0)
            reportIndex = 0;
        if (allReports.Count > 0)
        {
            currentReport = allReports[reportIndex];
        }
        setButtonText();
    }
    protected void ReportHasBeenRead()
    {
        if (allReports.Count > 0)
        {
            allReports[reportIndex].Reported++;
        }
        setButtonText();
    }
    void setButtonText()
    {
        reportRead = "NO";
        if (allReports.Count > 0)
        {
            if (allReports[reportIndex].Reported > 0)
            {
                reportRead = "YES";
            }
        }
    }
    }